// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AnthoniusHendriyanto/auth-service/internal/auth/service (interfaces: TokenGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenGenerator is a mock of TokenGenerator interface.
type MockTokenGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockTokenGeneratorMockRecorder
}

// MockTokenGeneratorMockRecorder is the mock recorder for MockTokenGenerator.
type MockTokenGeneratorMockRecorder struct {
	mock *MockTokenGenerator
}

// NewMockTokenGenerator creates a new mock instance.
func NewMockTokenGenerator(ctrl *gomock.Controller) *MockTokenGenerator {
	mock := &MockTokenGenerator{ctrl: ctrl}
	mock.recorder = &MockTokenGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenGenerator) EXPECT() *MockTokenGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockTokenGenerator) Generate(userID, email, role string) (string, string, time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", userID, email, role)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(time.Time)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// Generate indicates an expected call of Generate.
func (mr *MockTokenGeneratorMockRecorder) Generate(userID, email, role interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockTokenGenerator)(nil).Generate), userID, email, role)
}

// GetAccessTokenExpiry mocks base method.
func (m *MockTokenGenerator) GetAccessTokenExpiry() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessTokenExpiry")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetAccessTokenExpiry indicates an expected call of GetAccessTokenExpiry.
func (mr *MockTokenGeneratorMockRecorder) GetAccessTokenExpiry() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessTokenExpiry", reflect.TypeOf((*MockTokenGenerator)(nil).GetAccessTokenExpiry))
}

// GetRefreshTokenExpiry mocks base method.
func (m *MockTokenGenerator) GetRefreshTokenExpiry() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRefreshTokenExpiry")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetRefreshTokenExpiry indicates an expected call of GetRefreshTokenExpiry.
func (mr *MockTokenGeneratorMockRecorder) GetRefreshTokenExpiry() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRefreshTokenExpiry", reflect.TypeOf((*MockTokenGenerator)(nil).GetRefreshTokenExpiry))
}
